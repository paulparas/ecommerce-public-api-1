name: Production Deployment

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{github.ref_name}}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #KUBE_NAMESPACE: production
  ECR_REPOSITORY: promotion-assessment/ecommerce-public-api-1

jobs:
  build:

    runs-on: ubuntu-latest
    environment: 
      name: Production
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Create tag artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{github.ref_name}}
        path: Release
    
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1   
          
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}         
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
        docker build -f pgDockerfile -t $ECR_REGISTRY/postgres-custom .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
        docker push $ECR_REGISTRY/postgres-custom
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.25.0' # default is latest stable
      id: install
      
    - name: Update kube config
      run: aws eks update-kubeconfig --name promotion-assessment --kubeconfig $HOME/.kube/config
      
    - name: Configure kubectl
      run: |
          echo "${{ env.KUBE_CONFIG_DATA }}" > $HOME/.kube/config       
    
    
    #- name: Set Postgres DB Secret
    #  uses: azure/k8s-create-secret@v4
    #  with:
    #    secret-name: 'pgsql-secret'
    #    POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #    POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #    id: pgsql-secret
           
    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/prod
        kubectl apply -f k8s/ingress.yaml
    
    # - name: Deploy to Kubernetes cluster                                                                            
    #   uses: kodermax/kubectl-aws-eks@master                                                                         
    #   env:                                                                                                          
    #     RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
    #   with:                                                                                                         
    #     args: set image deployment/public-api app=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE
        
    # - name: Verify Kubernetes deployment                               
    #   uses: kodermax/kubectl-aws-eks@master                            
    #   with:                                                            
    #     args: rollout status deploy public-api -n $KUBE_NAMESPACE
